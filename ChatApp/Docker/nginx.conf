worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Compression
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
        application/javascript
        application/json
        application/xml
        text/css
        text/plain
        text/xml;

    # Headers pentru a permite încorporarea în iframe
    map $sent_http_content_type $x_frame_options {
        default "SAMEORIGIN";
        "text/html" "";
    }
    
    # Backend server (chat WebSocket) - expus pe portul 88
    server {
        listen 88;
        server_name _;
        
        # Permite orice origine pentru încorporare iframe
        add_header X-Frame-Options $x_frame_options;
        add_header Content-Security-Policy "frame-ancestors *";
        
        # Proxy pentru API
        location /api/ {
            proxy_pass http://backend:80;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Proxy special configurat pentru WebSocket
        location /chatHub {
            proxy_pass http://backend:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Setări specifice WebSocket pentru conexiuni de lungă durată
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_buffers 8 32k;
            proxy_buffer_size 64k;
        }
        
        # Health check pentru Kubernetes
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }
    
    # Frontend server (client chat) - expus pe portul 90
    server {
        listen 90;
        server_name _;
        
        # Permite orice origine pentru încorporare iframe
        add_header X-Frame-Options $x_frame_options;
        add_header Content-Security-Policy "frame-ancestors *";
        
        # Root pentru fișierele statice Vue
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            
            # Cache control pentru fișiere statice
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 30d;
                add_header Cache-Control "public, no-transform";
            }
        }
        
        # Health check pentru Kubernetes
        location /health {
            access_log off;
            return 200 "healthy\n";
        }
    }
}